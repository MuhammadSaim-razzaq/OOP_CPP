//24k-0704

#include <iostream>
#include <string>

using namespace std;

class Car {
private:
    string model;
    double price;

public:
    Car(string m = "", double p = 0.0) : model(m), price(p) {}

    friend class InventoryManager;
    friend void comparePrice(const Car& car1, const Car& car2);
};

class InventoryManager {
public:
    static void displayCar(const Car& car) {
        cout << "Model: " << car.model << endl;
        cout << "Price: $" << car.price << endl;
    }

    static void updatePrice(Car& car, double newPrice) {
        if (newPrice >= 0) {
            car.price = newPrice;
            cout << "Updated price for " << car.model << " to $" << newPrice << endl;
        } else {
            cout << "Invalid price value" << endl;
        }
    }
};

void comparePrice(const Car& car1, const Car& car2) {
    cout << "Comparing prices between " << car1.model << " and " << car2.model << ":" << endl;
    
    if (car1.price > car2.price) {
        cout << car1.model << " is more expensive by $" << (car1.price - car2.price) << endl;
    } else if (car2.price > car1.price) {
        cout << car2.model << " is more expensive by $" << (car2.price - car1.price) << endl;
    } else {
        cout << "Both cars have the same price of $" << car1.price << endl;
    }
}

int main() {
    Car car1("Toyota Camry", 25000.0);
    Car car2("Honda Accord", 27000.0);

    cout << "Initial car details:" << endl;
    InventoryManager::displayCar(car1);
    InventoryManager::displayCar(car2);
    cout << endl;

    comparePrice(car1, car2);
    cout << endl;

    InventoryManager::updatePrice(car1, 26000.0);
    cout << endl;

    comparePrice(car1, car2);
    cout << endl;

    InventoryManager::updatePrice(car2, 26000.0);
    cout << endl;

    comparePrice(car1, car2);

    return 0;
}
